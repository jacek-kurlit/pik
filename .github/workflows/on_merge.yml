name: Build
permissions:
  contents: write
on:
  push:
    branches: ["main"]
  pull_request:
env:
  # For setup-rust
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all --check
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-make
          components: clippy
      - name: Run linter
        run: cargo make lint
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            use-cross: false
            target: x86_64-unknown-linux-gnu

          - build: linux-aarch64
            os: ubuntu-latest
            use-cross: true
            target: aarch64-unknown-linux-gnu

          - build: macos
            os: macos-latest
            use-cross: false
            target: x86_64-apple-darwin

          - build: aarch64-macos
            os: macos-latest
            use-cross: false
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - uses: moonrepo/setup-rust@v1
        with:
          targets: ${{ matrix.target }}
          bins: cargo-make, cargo-nextest

      - name: Run cargo nextest (without cross)
        if: "!matrix.use-cross"
        run: cargo nextest run --release --locked --target ${{ matrix.target }}

      - name: Run cross test (cross)
        if: "matrix.use-cross"
        run: cross test --release --locked --target ${{ matrix.target }}
